#%%
%load_ext autoreload
%autoreload 2
# %%
import numpy as np
import matplotlib.pyplot as plt
import matplotlib as mpl
plt.style.use("seaborn-v0_8-talk")
# %%
dd = {
    "method" : ["exact", "minhash" ,"hybrid"],
    "fixed_cost" : [0, 3000, 3000],
    "column_cost": [600, 10, 200]
}
# %%
import polars as pl
# %%
df = pl.from_dict(dd)
# %%
rows = []
for _n in range(10):
    for m in ["exact", "minhash" ,"hybrid"]:
        fc = df.filter(pl.col("method") == m).select("fixed_cost").item()
        cc = df.filter(pl.col("method") == m).select("column_cost").item()
        r = [m, _n, fc+ cc*_n]
        rows.append(r)
res = pl.DataFrame(rows)
_r = res.group_by(pl.col("column_0")).agg(pl.all())
# %%
plt.style.use("seaborn-v0_8-talk")
with plt.style.context("seaborn-v0_8-talk"):
    fig, ax = plt.subplots(squeeze=True, layout="constrained", figsize=(4,3))
    for c in _r.iter_rows():
        ax.plot(c[1], c[2], label=c[0], marker="o", markersize=5)
        ax.fill_between(c[1], c[2], y2=0, alpha=0.2)
    ax.legend()
    ax.set_xlabel("Number of query columns")
    ax.set_ylabel("Overall retrieval time (s)")
    # fig.savefig("images/tradeoff-retrieval.png")
plt.show()
# %%
